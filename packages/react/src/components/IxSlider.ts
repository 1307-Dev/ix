/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import { IxSlider as IxSliderElement, defineCustomElement as defineIxSlider } from "@siemens/ix/components/ix-slider.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, createSSRComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type IxSliderEvents = { onValueChange: EventName<CustomEvent<number>> };

const IxSlider: StencilReactComponent<IxSliderElement, IxSliderEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IxSliderElement, IxSliderEvents>({
        tagName: 'ix-slider',
        elementClass: IxSliderElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onValueChange: 'valueChange' } as IxSliderEvents,
        defineCustomElement: defineIxSlider
    })
    : /*@__PURE__*/ createSSRComponent<IxSliderElement, IxSliderEvents>({
        tagName: 'ix-slider',
        properties: {
            step: 'step',
            min: 'min',
            max: 'max',
            value: 'value',
            trace: 'trace',
            traceReference: 'trace-reference',
            disabled: 'disabled',
            error: 'error'
        },
        hydrateModule: import('@siemens/ix/hydrate')
    });

export default IxSlider;
