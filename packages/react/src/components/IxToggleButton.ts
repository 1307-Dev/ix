/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import { IxToggleButton as IxToggleButtonElement, defineCustomElement as defineIxToggleButton } from "@siemens/ix/components/ix-toggle-button.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, createSSRComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type IxToggleButtonEvents = { onPressedChange: EventName<CustomEvent<boolean>> };

const IxToggleButton: StencilReactComponent<IxToggleButtonElement, IxToggleButtonEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IxToggleButtonElement, IxToggleButtonEvents>({
        tagName: 'ix-toggle-button',
        elementClass: IxToggleButtonElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: { onPressedChange: 'pressedChange' } as IxToggleButtonEvents,
        defineCustomElement: defineIxToggleButton
    })
    : /*@__PURE__*/ createSSRComponent<IxToggleButtonElement, IxToggleButtonEvents>({
        tagName: 'ix-toggle-button',
        properties: {
            variant: 'variant',
            outline: 'outline',
            ghost: 'ghost',
            disabled: 'disabled',
            loading: 'loading',
            icon: 'icon',
            pressed: 'pressed'
        },
        hydrateModule: import('@siemens/ix/hydrate')
    });

export default IxToggleButton;
