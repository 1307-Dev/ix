/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * Do __not__ import components from this file as server side rendered components
 * may not hydrate due to missing Stencil runtime. Instead, import these components through the generated 'components.ts'
 * file that re-exports all components with the 'use client' directive.
 */

/* eslint-disable */

import { type IxInputCustomEvent } from "@siemens/ix";
import { IxInput as IxInputElement, defineCustomElement as defineIxInput } from "@siemens/ix/components/ix-input.js";
import type { EventName, StencilReactComponent } from '@stencil/react-output-target/runtime';
import { createComponent, createSSRComponent } from '@stencil/react-output-target/runtime';
import React from 'react';

type IxInputEvents = {
    onValueChange: EventName<CustomEvent<string>>,
    onValidityStateChange: EventName<IxInputCustomEvent<ValidityState>>,
    onIxBlur: EventName<CustomEvent<void>>
};

const IxInput: StencilReactComponent<IxInputElement, IxInputEvents> = typeof window !== 'undefined'
    ? /*@__PURE__*/ createComponent<IxInputElement, IxInputEvents>({
        tagName: 'ix-input',
        elementClass: IxInputElement,
        // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
        react: React,
        events: {
            onValueChange: 'valueChange',
            onValidityStateChange: 'validityStateChange',
            onIxBlur: 'ixBlur'
        } as IxInputEvents,
        defineCustomElement: defineIxInput
    })
    : /*@__PURE__*/ createSSRComponent<IxInputElement, IxInputEvents>({
        tagName: 'ix-input',
        properties: {
            type: 'type',
            name: 'name',
            placeholder: 'placeholder',
            value: 'value',
            required: 'required',
            disabled: 'disabled',
            readonly: 'readonly',
            helperText: 'helper-text',
            infoText: 'info-text',
            showTextAsTooltip: 'show-text-as-tooltip',
            validText: 'valid-text',
            warningText: 'warning-text',
            label: 'label',
            invalidText: 'invalid-text',
            pattern: 'pattern',
            maxLength: 'max-length',
            minLength: 'min-length',
            allowedCharactersPattern: 'allowed-characters-pattern'
        },
        hydrateModule: import('@siemens/ix/hydrate')
    });

export default IxInput;
